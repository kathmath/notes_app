/*! normalize.css v3.0.2 | MIT License | git.io/normalize*/@import url(https://fonts.googleapis.com/css?family=Open+Sans);@import "http://netdna.bootstrapcdn.com/font-awesome/2.0/css/font-awesome.css";html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:700}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{border:0;font-size:100%;font:inherit;vertical-align:baseline;-webkit-margin-before:0;-webkit-margin-after:0;-webkit-margin-start:0;-webkit-margin-end:0;margin:0;padding:0;font-weight:400}body{font-family:Open Sans,sans-serif}body :focus{outline:0}h1{text-align:center;font-size:2pc;font-size:2rem;margin-top:3em;margin-bottom:1em}ul{list-style-type:none}li{word-wrap:break-word;padding:1em;padding-right:.5em;opacity:1}li:nth-child(1n){background-color:#eee;transition:all .4s ease-out}li:nth-child(2n){background-color:#fff;border-left:1px solid #eee;border-right:1px solid #eee;transition:all .4s ease-out}li:last-child{border-bottom:1px solid #eee}li.editMode{background-color:rgba(85,119,153,.3);border:none;transition:all .4s ease-out}li.editMode .editInput{display:inline}li.editMode label{display:none}li.editMode .edit:before{content:"\f0c7"}label{cursor:pointer;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1}button,label{font-size:19px;font-size:1.2rem}button{border:none;background-color:rgba(250,165,70,0);min-width:50px;text-align:center}button :focus{outline:0}input{font-size:19px;font-size:1.2rem;border:none;background-color:rgba(250,165,70,0);padding:1em}.newNote,input{display:-webkit-flex;display:-ms-flexbox;display:flex}.newNote{-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-align-items:stretch;-ms-flex-align:stretch;align-items:stretch;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;background-color:rgba(250,165,70,.5);margin:0 1em;overflow:hidden}#new{-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1}.add{text-align:center;background-color:rgba(250,165,70,.7);max-width:90pt;min-width:75pt;display:inline-block}.note{display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap}.note input{padding:0}.editInput{display:none;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1}#container{max-width:40em;margin:0 auto}#myNotes{margin:2em 1em}button:before{font-family:FontAwesome;font-weight:400;font-style:normal;display:inline-block;font-size:1.4em}.edit:before{content:"\f040"}.edit:before :focus{outline:0}.delete:before{content:"\f014"}.delete:before :focus{outline:0}@media (max-width:360px){#new{max-width:150px}}
/*# sourceMappingURL=data:application/json;base64, */